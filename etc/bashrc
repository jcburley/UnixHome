#!/bin/bash

[ -r ~/.debug-profiles ] && echo -e "\n\n$0: ~/.unixhome/etc/bashrc: running" && env

# 'ssh craig@bear <command>' runs ~/.bashrc, not ~/.bash_profile.
# 'ssh craig@bear' (no <command>) creates a login session, so
# ~/.bash_profile is read. (This was tested from doe, in case that
# matters.)

# Ubuntu 16.04 provides a .profile that (besides exiting immediately
# if $PS1 is not defined, as that indicates a non-interactive shell)
# runs .bashrc, and .profile (if it exists) is run by my
# .bash_profile, because MacPorts creates one (to set up $PATH) that
# does not run .bashrc.  So, defend against being run a second time by
# .bash_profile.

export UNIXHOME="${HOME}/.unixhome"
alias BASHRC_HAS_RUN=true

# Set up interactive capabilities.
if [ -n "$PS1" ]; then
    ALIASFILE=${UNIXHOME}/etc/aliases
    [ -r ${ALIASFILE} ] && . ${ALIASFILE}

    [ -r "$UNIX_PSP/bashrc" ] && . "$UNIX_PSP/bashrc"

    # Load all autocompletions if any are installed
    AUTOCOMPDIR=${UNIXHOME}/etc/bash_completion.d/
    if [ -d "${AUTOCOMPDIR}" ]; then
        for F in "${AUTOCOMPDIR}"*; do
            if [ -f "${F}" ]; then
                . "${F}"
            fi
        done
    fi

    # Get git goodness in prompts by first defining __git_ps1.
    [ -f ${UNIXHOME}/etc/git-prompt.sh ] && . ${UNIXHOME}/etc/git-prompt.sh

    # If .bash_profile is calling this script, it'll afterwards overwrite
    # these two vars, so the "bash" shell doesn't display $SHLVL.
    export PS1='[${SHLVL}] [\u@\h \W$(__git_ps1 " (%s)")]\$ '
    export PROMPT_COMMAND='__git_ps1 "[\${SHLVL}] \u@\h:\w" "\\\$ "'
else
    CMDFILE=${UNIXHOME}/etc/commands
    [ -r ${CMDFILE} ] && . ${CMDFILE}
fi
